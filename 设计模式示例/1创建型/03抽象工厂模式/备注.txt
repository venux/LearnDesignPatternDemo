参考：
1.http://www.cnblogs.com/zhili/p/AbstractFactory.html
2.http://blog.csdn.net/wyxhd2008/article/details/5597975
3.http://blog.csdn.net/superbeck/article/details/4446177



工厂方法模式和抽象工厂模式的区别：

工厂模式针对的是一个产品等级结构 ，抽象工厂模式针对的是面向多个产品等级结构的。 
工厂方法模式（针对的是一个产品等级结构，一个抽象产品类，可以派生出多个具体产品类，一个抽象工厂类，可以派生出多个具体工厂类，每个具体工厂类只能创建一个具体产品类的实例）。
抽象工厂模式（针对的是面向多个产品等级结构，多个抽象产品类，每个抽象产品类可以派生出多个具体产品类，一个抽象工厂类，可以派生出多个具体工厂类，每个具体工厂类可以创建多个具体产品类的实例）。

简单工厂、工厂方法、抽象工厂之小结与区别：
小结

★工厂模式中，重要的是工厂类，而不是产品类。产品类可以是多种形式，多层继承或者是单个类都是可以的。但要明确的，工厂模式的接口只会返回一种类型的实例，这是在设计产品类的时候需要注意的，最好是有父类或者共同实现的接口。
★使用工厂模式，返回的实例一定是工厂创建的，而不是从其他对象中获取的。
★工厂模式返回的实例可以不是新创建的，返回由工厂创建好的实例也是可以的。

区别

简单工厂 ： 用来生产同一等级结构中的任意产品。（对于增加新的产品，无能为力）
工厂方法 ：用来生产同一等级结构中的固定产品。（支持增加任意产品）   
抽象工厂 ：用来生产不同产品族的全部产品。（对于增加新的产品，无能为力；支持增加产品族）  

以上三种工厂 方法在等级结构和产品族这两个方向上的支持程度不同。所以要根据情况考虑应该使用哪种方法。