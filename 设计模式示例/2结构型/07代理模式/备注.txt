参考：
1.http://www.cnblogs.com/zhili/p/ProxyPattern.html
2.http://www.cnblogs.com/zhenyulu/category/6930.html


定义

代理（Proxy）模式给某一个对象提供一个代理，并由代理对象控制对原对象的引用。
代理模式的英文叫做Proxy或Surrogate，中文都可译成"代理"。所谓代理，就是一个人或者一个机构代表另一个人或者另一个机构采取行动。
在一些情况下，一个客户不想或者不能够直接引用一个对象，而代理对象可以在客户端和目标对象之间起到中介的作用。



种类

远程（Remote）代理：为一个位于不同的地址空间的对象提供一个局域代表对象。这个不同的地址空间可以是在本机器中，也可是在另一台机器中。远程代理又叫做大使（Ambassador）。 
•虚拟（Virtual）代理：根据需要创建一个资源消耗较大的对象，使得此对象只在需要时才会被真正创建。 
•Copy-on-Write代理：虚拟代理的一种。把复制（克隆）拖延到只有在客户端需要时，才真正采取行动。 
•保护（Protect or Access）代理：控制对一个对象的访问，如果需要，可以给不同的用户提供不同级别的使用权限。 
•Cache代理：为某一个目标操作的结果提供临时的存储空间，以便多个客户端可以共享这些结果。 
•防火墙（Firewall）代理：保护目标，不让恶意用户接近。 
•同步化（Synchronization）代理：使几个用户能够同时使用一个对象而没有冲突。 
•智能引用（Smart Reference）代理：当一个对象被引用时，提供一些额外的操作，比如将对此对象调用的次数记录下来等。

在所有种类的代理模式中，虚拟（Virtual）代理、远程（Remote）代理、智能引用代理（Smart Reference Proxy）和保护（Protect or Access）代理是最为常见的代理模式。


角色：

抽象主题角色（Subject）：声明了真实主题和代理主题的共同接口，这样一来在任何使用真实主题的地方都可以使用代理主题。
代理主题（Proxy）角色：代理主题角色内部含有对真实主题的引用，从而可以在任何时候操作真实主题对象；代理主题角色提供一个与真实主题角色相同的接口，以便可以在任何时候都可以替代真实主体；控制真实主题的应用，负责在需要的时候创建真实主题对象（和删除真实主题对象）；代理角色通常在将客户端调用传递给真实的主题之前或之后，都要执行某个操作，而不是单纯的将调用传递给真实主题对象。
真实主题角色（RealSubject）角色：定义了代理角色所代表的真实对象。





优缺点：

优点：
1.代理模式能够将调用用于真正被调用的对象隔离，在一定程度上降低了系统的耦合度；
2.代理对象在客户端和目标对象之间起到一个中介的作用，这样可以起到对目标对象的保护。代理对象可以在对目标对象发出请求之前进行一个额外的操作，例如权限检查等。

缺点：
1. 由于在客户端和真实主题之间增加了一个代理对象，所以会造成请求的处理速度变慢
2.实现代理类也需要额外的工作，从而增加了系统的实现复杂度。

总结

代理模式提供了对目标对象访问的代理。
